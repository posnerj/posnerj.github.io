% Encoding: UTF-8

@conference{PosnerWagomuISC24,
    author = {Jonas Posner and Patrick Finnerty},
    title = {Project Wagomu: Elastic HPC Resource Management},
    booktitle = {ISC High Performance Conference},
    year = {2024},
    poster = {https://uni-kassel.de/go/isc24},
    bibtex_show = {true} }

@inproceedings{PosnerEvolvingWAMTA24,
    author = {Jonas Posner and Raoul Goebel and Patrick Finnerty},
    title = {Evolving APGAS Programs: Automatic and Transparent Resource Adjustments at Runtime},
    booktitle = {Proceedings Workshop on Asynchronous Many-Task Systems and Applications (WAMTA)},
    year = {2024},
    slides = {https://doi.org/10.5281/zenodo.10671344},
    doi = {10.1007/978-3-031-61763-8_15},
    altmetric = {false},
    bibtex_show = {true},
    google_scholar_id={0EnyYjriUFMC},
    abstract = {
    In the rapidly evolving field of High-Performance Computing (HPC), the need for resource elasticity is paramount, particularly in addressing the dynamic nature of irregular computational workloads. A key area of elasticity lies within programming models that typically offer limited support.
 \par
 Fully elastic programs are both malleable—capable of dynamically adjusting resources in response to external job scheduler requests—and evolving—autonomously deciding when and how to adjust resources, e.g., through automated decision-making. Previous elasticity approaches typically relied on iterative workloads and required complex code modifications.
 Asynchronous Many-Task (AMT) programming is emerging as a powerful alternative. In AMT, computations are split into fine-grained tasks, allowing transparent task relocation by the runtime system and unlocking significant potential for efficient elasticity.
 \par
 This work-in-progress proposes an extension to the existing AMT APGAS that recently incorporated malleability. Our extension adds evolving capabilities providing automatic and transparent resource adjustments to meet changing computational workloads at runtime. Our easy-to-use abstractions require only minimal code additions; adjustments such as process initialization and termination are managed automatically. Our extension is validated via a load-balancing library for irregular workloads.
\par
 We propose two heuristics for automatic computational load detection: one that uses CPU loads provided by the operating system, and another that exploits detailed insights into task loads. We evaluate our approach using a novel synthetic benchmark that starts with a single task evolving into two irregular trees connected by a long sequential branch. Preliminary results are promising, indicating that both the CPU-based heuristic and the task-based heuristic showing similar efficiency.}, }

@article{FinnertyMalleableSNCS24,
    author = {Patrick Finnerty and Jonas Posner and Janek B\"urger and Leo Takaoka and Takuma Kanzaki},
    title = {On the Performance of Malleable APGAS Programs and Batch Job Schedulers},
    journal = {Springer Nature Computer Science},
    year = {2024},
    doi = {10.1007/s42979-024-02641-7},
    altmetric = {false},
    bibtex_show = {true} }

@inproceedings{PosnerSchedulingPECS23,
    author = {Jonas Posner and Fabian Hupfeld and Patrick Finnerty},
    title = {Enhancing Supercomputer Performance with Malleable Job Scheduling Strategies},
    booktitle = {Proceedings Euro-Par Parallel Processing Workshops (PECS)},
    year = {2023},
    publisher = {Springer},
    doi = {10.1007/978-3-031-48803-0_14},
    slides = {https://doi.org/10.5281/zenodo.8315842},
    altmetric = {false},
    bibtex_show = {true} }

@inproceedings{FinnertyMalleableAMTE24,
    author = {Patrick Finnerty and Reo Takaoka and Takuma Kanzaki and Jonas Posner},
    title = {Malleable APGAS Programs and their Support in Batch Job Schedulers},
    booktitle = {Proceedings Euro-Par Parallel Processing Workshops (AMTE)},
    year = {2023},
    publisher = {Springer},
    doi = {10.1007/978-3-031-48803-0_8},
    slides = {https://doi.org/10.5281/zenodo.8287393},
    altmetric = {false},
    bibtex_show = {true} }

@conference{PosnerAMTSC22,
    author = {Jonas Posner},
    title = {Load Balancing, Fault Tolerance, and Resource Elasticity for Asynchronous Many-Task Systems},
    booktitle = {International Conference on High Performance Computing, Networking, Storage and Analysis (SC)},
    year = {2022},
    poster = {https://www.uni-kassel.de/eecs/plm/team/jonas-posner/sc22},
    bibtex_show = {true} }

@conference{PosnerAMTISC22,
    author = {Jonas Posner},
    title = {Asynchronous Many-Tasking (AMT): Load Balancing, Fault Tolerance, Resource Elasticity},
    booktitle = {ISC High Performance Conference},
    year = {2022},
    poster = {https://www.uni-kassel.de/eecs/plm/team/jonas-posner/isc22},
    bibtex_show = {true} }

@phdthesis{PosnerPhD22,
    author = {Jonas Posner},
    title = {Load Balancing, Fault Tolerance, and Resource Elasticity for Asynchronous Many-Task Systems},
    school = {University of Kassel, Germany},
    year = {2021},
    doi = {10.17170/kobra-202207286542},
    altmetric = {false},
    bibtex_show = {true} }


@article{PosnerCheckpointingIJNC22,
    author = {Jonas Posner and Lukas Reitz and Claudia Fohry},
    title = {Task-Level Resilience: Checkpointing vs. Supervision},
    journal = {Special Issue International Journal of Networking and Computing (IJNC)},
    year = {2022},
    volume = {12},
    number = {1},
    pages = {47--72},
    doi = {10.15803/ijnc.12.1_47},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{PosnerElasticityP2S221,
    author = {Jonas Posner and Claudia Fohry},
    title = {Transparent Resource Elasticity for Task-Based Cluster Environments with Work Stealing},
    booktitle = {Proceedings International Conference on Parallel Processing (ICPP) Workshops (P2S2)},
    year = {2021},
    publisher = {ACM},
    pages = {1--10},
    doi = {10.1145/3458744.3473361},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{PosnerElasticity21,
    author = {Jonas Posner},
    title = {Resource Elasticity at Task-Level},
    booktitle = {Proceedings International Parallel and Distributed Processing Symposium (IPDPS), Ph.D. Forum},
    year = {2021},
    publisher = {IEEE},
    doi = {10.1109/IPDPSW52791.2021.00160},
    altmetric = {false},
    bibtex_show = {true},
    addendum = {Extended Abstract}, }

@inproceedings{PosnerCheckpointingAPDCM21,
    author = {Jonas Posner and Lukas Reitz and Claudia Fohry},
    title = {Checkpointing vs. Supervision Resilience Approaches for Dynamic Independent Tasks},
    booktitle = {Proceeding International Parallel and Distributed Processing Symposium (IPDPS) Workshops (APDCM)},
    year = {2021},
    publisher = {IEEE},
    doi = {10.1109/IPDPSW52791.2021.00089},
    altmetric = {false},
    bibtex_show = {true} }


@conference{PosnerLocalityPrace21,
    author = {Jonas Posner},
    title = {Locality-Flexible and Cancelable Tasks for the APGAS Library},
    booktitle = {EuroHPC Summit Week, PRACEdays},
    year = {2021},
    poster = {https://www.uni-kassel.de/go/EuroHPC20},
    bibtex_show = {true} }


@inproceedings{PosnerDMTCPCluster20,
    author = {Jonas Posner},
    title = {System-Level vs. Application-Level Checkpointing},
    booktitle = {International Conference on Cluster Computing (CLUSTER)},
    publisher = {IEEE},
    year = {2020},
    pages = {404--405},
    doi = {10.1109/CLUSTER49012.2020.00051},
    altmetric = {false},
    bibtex_show = {true} }


@article{PosnerFaultToleranceFGCS19,
    author = {Jonas Posner and Lukas Reitz and Claudia Fohry},
    title = {A Comparison of Application-Level Fault Tolerance Schemes for Task Pools},
    journal = {Future Generation Computer Systems (FGCS)},
    year = {2019},
    volume = {105},
    pages = {119--134},
    doi = {10.1016/j.future.2019.11.031},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{PosnerSparkPAW18,
    author = {Jonas Posner and Lukas Reitz and Claudia Fohry},
    title = {Comparison of the HPC and Big Data Java Libraries Spark, PCJ and APGAS},
    booktitle = {Proceedings International Conference on High Performance Computing, Networking, Storage and Analysis (SC) Workshops (PAW-ATM)},
    publisher = {ACM},
    year = {2018},
    pages = {11--22},
    doi = {10.1109/PAW-ATM.2018.00007},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{FohryIncrementalHPCS18,
    author = {Claudia Fohry and Jonas Posner and Lukas Reitz},
    title = {A Selective and Incremental Backup Scheme for Task Pools},
    booktitle = {Proceedings International Conference on High Performance Computing {\&} Simulation (HPCS)},
    year = {2018},
    pages = {621--628},
    doi = {10.1109/HPCS.2018.00103},
    altmetric = {false},
    bibtex_show = {true} }


@article{PosnerHybridSuper18,
    author = {Jonas Posner and Claudia Fohry},
    title = {Hybrid Work Stealing of Locality-Flexible and Cancelable Tasks for the APGAS Library},
    journal = {The Journal of Supercomputing},
    publisher = {Springer},
    year = {2018},
    pages = {1435--1448},
    doi = {10.1007/s11227-018-2234-8},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{PosnerCombinationWLPP18,
    author = {Jonas Posner and Claudia Fohry},
    title = {A Combination of Intra- and Inter-place Work Stealing for the APGAS Library},
    booktitle = {Proceedings Parallel Processing and Applied Mathematics (PPAM) Workshops (WLPP)},
    publisher = {Springer},
    year = {2018},
    pages = {234--243},
    doi = {10.1007/978-3-319-78054-2_22},
    altmetric = {false},
    bibtex_show = {true} }


@article{PosnerFaultToleranceIJNC18,
    author = {Jonas Posner and Claudia Fohry},
    title = {A Java Task Pool Framework providing Fault-Tolerant Global Load Balancing},
    journal = {Special Issue on the International Journal of Networking and Computing (IJNC)},
    year = {2018},
    volume = {8},
    number = {1},
    pages = {2--31},
    doi = {10.15803/ijnc.8.1_2},
    altmetric = {false},
    bibtex_show = {true} }


@conference{PosnerFaultToleranceIPDPS17,
    author = {Jonas Posner},
    title = {A Generic Reusable Java Framework for Fault-Tolerant Parallelization with the Task Pool Pattern},
    booktitle = {International Parallel and Distributed Processing Symposium (IPDPS), Ph.D. Forum},
    year = {2017},
    poster = {https://www.uni-kassel.de/eecs/?id=46913},
    bibtex_show = {true} }

@inproceedings{PosnerFaultToleranceAPDCM17,
    author = {Jonas Posner and Claudia Fohry},
    title = {Fault Tolerance for Cooperative Lifeline-Based Global Load Balancing in Java with APGAS and Hazelcast},
    booktitle = {International Parallel and Distributed Processing Symposium (IPDPS) Workshops (APDCM)},
    year = {2017},
    publisher = {IEEE},
    pages = {854--863},
    doi = {10.1109/ipdpsw.2017.31},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{PosnerCooperationX1016,
    author = {Jonas Posner and Claudia Fohry},
    title = {Cooperation vs. Coordination for Lifeline-Based Global Load Balancing in APGAS},
    booktitle = {Proceedings of the 6th ACM SIGPLAN Workshop on X10},
    year = {2016},
    publisher = {ACM},
    pages = {13--17},
    doi = {10.1145/2931028.2931029},
    altmetric = {false},
    bibtex_show = {true} }


@article{FohryFaultToleranceSCPE15,
    author = {Claudia Fohry and Marco Bungart and Jonas Posner},
    title = {Fault Tolerance Schemes for Global Load Balancing in X10},
    journal = {Scalable Computing: Practice and Experience (SCPE)},
    year = {2015},
    volume = {16},
    number = {2},
    pages = {169--186},
    doi = {10.12694/scpe.v16i2.1088},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{FohryFaultToleranceX1015,
    author = {Claudia Fohry and Marco Bungart and Jonas Posner},
    title = {Towards an Efficient Fault-Tolerance Scheme for GLB},
    booktitle = {Proceedings of the ACM SIGPLAN Workshop on X10},
    year = {2015},
    publisher = {ACM},
    pages = {27--32},
    doi = {10.1145/2771774.2771779},
    altmetric = {false},
    bibtex_show = {true} }


@inproceedings{BungartFaultToleranceSYNASC14,
    author = {Marco Bungart and Claudia Fohry and Jonas Posner},
    title = {Fault-Tolerant Global Load Balancing in X10},
    booktitle = {Proceedings International Symposium on Symbolic and Numeric Algorithms for Scientific Computing (SYNASC)},
    year = {2014},
    pages = {471--478},
    publisher = {IEEE},
    doi = {10.1109/synasc.2014.69},
    altmetric = {false},
    bibtex_show = {true} }


